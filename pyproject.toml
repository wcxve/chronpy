[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "astro-chronpy"
dynamic = ["version"]
description = "A comprehensive toolkit for astronomical time series analysis."
readme = "README.md"
requires-python = ">=3.10"
license = "GPL-3.0-or-later"
keywords = []
authors = [
    { name = "Wang-Chen Xue", email = "wcxuemail@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "arviz>=0.18.0",
    "flax",
    "jax>=0.4.28",
    "numpy",
    "numpyro>=0.16.1",
    "optimistix>=0.0.8",
]

[project.optional-dependencies]
test = ["coverage[toml]", "pytest", "pytest-cov"]
docs = [
    "ipywidgets",
    "jupyter",
    "jupyterlab_widgets",
    "sphinx>=7.4.0",
    "sphinx-autodoc-typehints",
    "sphinx-codeautolink",
    "sphinx-copybutton",
    "sphinx-design",
    "myst-nb",
    "numba",
    "numpydoc",
    "pydata-sphinx-theme",
    "widgetsnbextension",
]

[project.urls]
Documentation = "https://github.com/wcxve/chronpy#readme"
Issues = "https://github.com/wcxve/chronpy/issues"
Source = "https://github.com/wcxve/chronpy"

[tool.hatch]
build.targets.wheel.packages = ["src/chronpy"]
version.path = "src/chronpy/__about__.py"
envs.types.extra-dependencies = [
    "mypy>=1.0.0",
]
envs.types.scripts.check = "mypy --install-types --non-interactive {args:src/chronpy tests}"

[tool.ruff]
line-length = 79
target-version = "py310"
format.quote-style = "single"
lint.extend-select = ["Q"]
lint.flake8-quotes.inline-quotes = "single"
lint.ignore = [
    "B028",  # allow warnings without stacklevel
    "C901",  # allow functions with a high complexity
    "E731",  # allow lambda functions
]
lint.isort.known-first-party = ["src"]
lint.isort.combine-as-imports = true
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.coverage]
run.source_pkgs = ["chronpy", "tests"]
run.branch = true
run.parallel = true
run.omit = [
    "src/chronpy/__about__.py",
]

paths.chronpy = ["src/chronpy", "*/chronpy/src/chronpy"]
paths.tests = ["tests", "*/chronpy/tests"]

report.exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
